rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Common function to verify user
    function isSignedIn() {
      return request.auth != null;
    }

    // Blog post like count (aggregate field on post doc)
    match /content/{slug} {
      allow read: if true;
      allow create, update: if request.auth != null && request.resource.data.keys().hasOnly(['likes']);
    }

    // User-specific like documents for posts
    match /users/{userId}/postLikes/{slug} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow users to read and manage their own likes
    match /blog-likes/{likeId} {
      allow read: if true;
      allow create: if isSignedIn()
        && request.auth.uid == request.resource.data.userId
        && likeId == request.resource.data.postId + "_" + request.auth.uid;
      allow delete: if isSignedIn()
        && request.auth.uid == resource.data.userId;
    }
    
    // Allow users to read and manage their own comments
    match /blog-comments/{commentId} {
      allow read: if true;
      allow create: if isSignedIn()
        && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isSignedIn()
        && request.auth.uid == resource.data.userId;
    }

    // Listing comments and ratings
    match /content/{listingId}/comments/{commentId} {
      allow read: if true;
      allow create: if isSignedIn() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.rating >= 0 
        && request.resource.data.rating <= 5;
      allow update, delete: if isSignedIn() 
        && resource.data.userId == request.auth.uid;
    }

    // Listing metadata (for storing aggregate data)
    match /content/{listingId}/metadata/stats {
      allow read: if true;
      // Only allow updates through server functions
      allow write: if false;
    }

    // (Optional) Other user-specific data, but do NOT shadow postLikes
    // match /users/{userId}/{collection}/{docId} {
    //   allow read, write: if request.auth != null && request.auth.uid == userId;
    // }
  }
}